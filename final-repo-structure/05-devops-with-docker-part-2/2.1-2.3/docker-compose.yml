version: '3.8'

services:
  web-service:
    image: devopsdockeruh/simple-web-service
    volumes: 
      - ./logs/text.log:/usr/src/app/text.log
    command: server
    ports:
      - "8081:8080"
    networks:
      - app-network

  backend-service:
    image: radeczu/backend
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - REQUEST_ORIGIN=http://localhost:8082
      - REDIS_HOST=redis
      - POSTGRES_HOST=database
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - database
    networks:
      - app-network

  frontend-service:
    build:
      context: C:/Users/Radek/Radek/radek rc/Uczelniane/IV ROK/Docker/thatSpringProject/material-applications/example-frontend
      args:
        - REACT_APP_BACKEND_URL=http://localhost:8080
    image: radeczu/frontend:1.2
    ports:
      - "5000:5000"
    depends_on:
      - backend-service
    networks:
      - app-network

  redis:
    image: redis:latest
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - app-network

  database:
    image: postgres:latest
    restart: unless-stopped
    volumes:
      - ./database:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    networks:
      - app-network

  nginx:
    image: nginx:latest
    ports:
      - "8082:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend-service
      - backend-service
    networks:
      - app-network

networks:
  app-network:
    driver: bridge